@startuml

class Empleado {
-nombre: String
-apellido: String
-CUIL: Integer
-fechaDeNacimiento: LocalDate
-hijosACargo: Integer
-contratos: List<Contrato>
-contratoActivo: Contrato
+generarReciboSueldo(): ReciboSueldo
}

abstract class Contrato <<abstract>> {
+esActivo(): Boolean
+duracion(): DateLapse
#calcularSueldoAdicional(sueldoBasico: Real): Real
}

class ContratoPorHora {
-fechaInicio: LocalDate
-fechaFin: LocalDate
-numeroHoras: Integer
-valorHora: Real
+<<create>> ContratoPorHora(fechaInicio: LocalDate, fechaFin: LocalDate, numeroHoras: Integer, valorHora: Real)
-calcularSueldoBasico(): Real
+calcularSueldo(): Real
+esActivo(): Boolean
+obtenerDuracion(): DateLapse
}

class ContratoDePlanta {
-fechaInicio: LocalDate
-montoPorConyuge: Real
-montoPorHijos: Real
-sueldoMensual: Real
+<<create>> ContratoDePlanta(fechaInicio: LocalDate, montoPorConyuge: Real, montoPorHijos: Real, sueldoMensual: Real)
-calcularSueldoBasico(): Real
+calcularSueldo(): Real
+esActivo(): Boolean
+obtenerDuracion(): DateLapse
}

class ReciboSueldo {
-nombreEmpleado: String
-apellidoEmpleado: String
-CUIL: Integer
-antiguedad: Integer
-fechaGenerado: LocalDate
-montoTotal: Real
}

class DateLapse {
-from: LocalDate
-to: LocalDate
+getFrom(): LocalDate
+getTo(): LocalDate
+sizeInDays(): Integer
+includesDate(periodo: DateLapse): Boolean
+overlaps(periodo: DateLapse): Boolean
+inside(periodo: DateLapse): Boolean
}

Contrato <|-- ContratoPorHora
Contrato <|-- ContratoDePlanta

Empleado --> Contrato: contratos 0..*
Empleado --> Contrato: contratoActivo

Empleado -right-> ReciboSueldo

ContratoPorHora -- DateLapse
ContratoDePlanta -- DateLapse

@enduml
